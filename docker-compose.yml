version: '3.8'
services:
  mongodb:
        ports:
            - '27017:27017'
        volumes:
            - './Docker/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro'
        restart: unless-stopped
        image: mongo
        container_name: mongodb
        hostname: mongodb
        environment:
          MONGO_INITDB_ROOT_USERNAME: sa
          MONGO_INITDB_ROOT_PASSWORD: cesimanger1234ABC
          MONGO_INITDB_DATABASE: cesiManger
        healthcheck:
          test: echo 'db.runCommand("ping").ok' | mongo mongodb:27017/test --quiet
          interval: 10s
          timeout: 10s
          retries: 5
          start_period: 40s
  sqlserv:
        build:
            context: ./Docker
            dockerfile: Dockerfile
        ports:
            - '1433:1433'
        volumes:
            - './DB/sqlserver/database:/data/db'
        restart: unless-stopped
        image: microsoft/mssql-server-linux:2017-latest
        container_name: sqlserv
        hostname: sqlserver
        environment:
          - ACCEPT_EULA=Y
          - SA_PASSWORD=${SQLSERVER_PASSWORD}
          - PUID=1000
          - PGID=1000
        healthcheck:
          test: [ "CMD", "/opt/mssql-tools/bin/sqlcmd", "-${SQLSERVER_USERNAME}", "-${SQLSERVER_PASSWORD}", "-${SQLSERVER_DB}", "select 1" ]
          interval: 1s
          retries: 20
  centrale:
    build:
      context: ./Centrale
      dockerfile: Dockerfile
    ports:
      - '40253:40253'
    restart: always
    image: nodejs
    container_name: centrale
    volumes:
      - ./Centrale:/home/node/app
      - ./Centrale/node_modules:/home/node/app/node_modules
    env_file: .env
    depends_on:
      - mongodb
      - sqlserv
    environment:
      WAIT_HOSTS: ${SQLSERVER_HOSTNAME}:1433, ${MONGO_HOSTNAME}:27017
      WAIT_AFTER: 100